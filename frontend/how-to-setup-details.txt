first we have use npx create-react-app <name> to create a react app

then to get redux tookit template we have to type npx degit reduxjs/redux-templates/packages/cra-template-redux react-app in a new terminal by opening a new vs code 

then from that copy the full content inside template/src and paste it inside our src in the react app then  we get the redux tempelate 

first we are setting up frontend first then only backend so to test frontend we use a site dummy.json where we get a lot of data in json format we have to create data.json file in react app and paste the json code there 

then we have to install npm i -g json-server this will check the content in the data.json(for each item present in the data.json it makes a api ) that we have created and gives us a port so that we can test our frontend we have to enter the code  json-server --watch ./src/data.json --port 8080 

then we have to go to react form hook website  use react form hook by useHook() an we have to download as "npm install react-hook-form"  this basically is for when we create a user we enter the username password and confirm password and we sent this to the api to put it in the DB so for that we can put this all data in a form by just using this and this form content is send to backend ie to api so basically we can easily covert the data entered by the user into form

then if we want to validate the contents that we enter as email or password etc like email  should be of type email@mail.com like that then we have validator option in use hook we can click that or go to regexer where we will  get all type validators for email passwords etc to use it we have to give it as 
{ pattern: /\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi }
but if we want some king of messagew then 
pattern:{
                    value:/\b[\w\.-]+@[\w\.-]+\.\w{2,4}\b/gi,
                    message:"email is not valid"
                  }

to check whether the confirm password  we entered is same as  password in use hook website go to api then usehook() then register then scroll down we can see validate where this code is presnent validate: (value, formValues) => value === '1' here change 1 to      validate: (value, formValues) => value === formValues.password || "Password not matching"    where value is confirm password and formValues is with with value you want to compare it with that is here password  and the sentence after this symbol || is if it is not matching        


// to add alert

now to just to make the frontend more beautyful we can use alert by downloading 
npm install --save react-alert react-alert-template-basic --force
then after instaling paste the below given code in app.js

import { positions, Provider } from "react-alert";
import AlertTemplate from "react-alert-template-basic";
const options = {
  timeout: 5000,
  position: positions.BOTTOM_CENTER
};

then in the function app inside at return staement add
<Provider template={AlertTemplate} {...options}></Provider>

then were we want to use this alert paste the below given code there 

          alert.show("Oh look, an alert!"); we can use alert.show,.success,.error etc

then in the same file import useAlert as import { useAlert } from "react-alert";
then create  const alert=useAlert()     


//to add spinner 

to add spinner that is when the page time to load we show sipnner to add it forst open npm sipinner loader and sownload 
npm install react-loader-spinner --force  

then click on a link at right side there go to reasct spinner there we can see lot of spinner choose one and copy code of it 
foe example 
{status==="loading"?<Grid
  visible={true}
  height="80"
  width="80"
  color="rgb(79,70,229)"
  ariaLabel="grid-loading"
  radius="12.5"
  wrapperStyle={{}}
  wrapperClass="grid-wrapper"
  />:null}

  where status is all apislice.js there is status we check whether it is fullfiled or lading and according to it we can show spinner

when we clone a different repository then we have to enter npm install --force . This command will create a new folder node_modules and install all packages in package.json inside it. 

